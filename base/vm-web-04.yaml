apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: vm-web-04
  labels:
    app: web-server
    workshop: gitops-ocpvirt
  annotations:
    workshop.gitops/config-version: "v4-fedora-firewall-fix"
spec:
  dataVolumeTemplates:
  - apiVersion: cdi.kubevirt.io/v1beta1
    kind: DataVolumeTemplate
    metadata:
      name: vm-web-04
    spec:
      sourceRef:
        kind: DataSource
        name: fedora
        namespace: openshift-virtualization-os-images
      storage:
        resources:
          requests:
            storage: 30Gi
  running: true
  template:
    metadata:
      labels:
        kubevirt.io/size: small
        kubevirt.io/domain: vm-web-04
        app: web-server
    spec:
      domain:
        cpu:
          cores: 1
          sockets: 1
          threads: 1
        devices:
          disks:
          - disk:
              bus: virtio
            name: rootdisk
          - disk:
              bus: virtio
            name: cloudinitdisk
          interfaces:
          - masquerade: {}
            name: default
          networkInterfaceMultiqueue: true
          rng: {}
        machine:
          type: pc-q35-rhel8.6.0
        resources:
          requests:
            memory: 2Gi
      evictionStrategy: LiveMigrate
      networks:
      - name: default
        pod: {}
      terminationGracePeriodSeconds: 180
      volumes:
      - dataVolume:
          name: vm-web-04
        name: rootdisk
      - cloudInitNoCloud:
          userData: |
            #cloud-config
            user: cloud-user
            password: redhat123
            chpasswd: { expire: False }
            packages:
              - httpd
              - firewalld
            runcmd:
              - systemctl enable httpd
              - systemctl start httpd
              - echo 'Web Server - VM 04' > /var/www/html/index.html
              - systemctl enable firewalld
              - systemctl start firewalld
              - firewall-cmd --permanent --add-service=http || true
              - firewall-cmd --reload || true
        name: cloudinitdisk
      accessCredentials:
      - sshPublicKey:
          source:
            secret:
              secretName: workshop-ssh-key
          propagationMethod:
            noCloud: {}
